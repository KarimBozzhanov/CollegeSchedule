// <auto-generated />
using System;
using CollegeSchedule.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CollegeSchedule.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CollegeSchedule.Models.ConsultationSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ConsultationNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ConsultationSubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsultationSubjectId");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ConsultationsSchedules");
                });

            modelBuilder.Entity("CollegeSchedule.Models.ExamsSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ExamSubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExamSubjectId");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ExamsSchedules");
                });

            modelBuilder.Entity("CollegeSchedule.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GroupCourse")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupShift")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("CollegeSchedule.Models.PracticeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("PracticeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PracticeNumber")
                        .HasColumnType("int");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("PracticeSchedules");
                });

            modelBuilder.Entity("CollegeSchedule.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DayOfTheWeek")
                        .HasColumnType("int");

                    b.Property<string>("EndOfLesson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("RoomDenominator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNumerator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartOfLesson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubjectDenominatorId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectNumeratorId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherDenominatorId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherNumeratorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("SubjectDenominatorId");

                    b.HasIndex("SubjectNumeratorId");

                    b.HasIndex("TeacherDenominatorId");

                    b.HasIndex("TeacherNumeratorId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("CollegeSchedule.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("CollegeSchedule.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TeacherPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teacherFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("CollegeSchedule.Models.TeachersSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DayOfTheWeek")
                        .HasColumnType("int");

                    b.Property<int?>("ScheduleDenominatorId")
                        .HasColumnType("int");

                    b.Property<int?>("ScheduleNumeratorId")
                        .HasColumnType("int");

                    b.Property<int>("Shift")
                        .HasColumnType("int");

                    b.Property<int>("SubjectNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleDenominatorId");

                    b.HasIndex("ScheduleNumeratorId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeachersSchedules");
                });

            modelBuilder.Entity("CollegeSchedule.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            password = "Adm1n$Pa$$2018+-",
                            userName = "Admin"
                        });
                });

            modelBuilder.Entity("CollegeSchedule.Models.ConsultationSchedule", b =>
                {
                    b.HasOne("CollegeSchedule.Models.Subject", "ConsultationSubject")
                        .WithMany()
                        .HasForeignKey("ConsultationSubjectId");

                    b.HasOne("CollegeSchedule.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("CollegeSchedule.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("ConsultationSubject");

                    b.Navigation("Group");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("CollegeSchedule.Models.ExamsSchedule", b =>
                {
                    b.HasOne("CollegeSchedule.Models.Subject", "ExamSubject")
                        .WithMany()
                        .HasForeignKey("ExamSubjectId");

                    b.HasOne("CollegeSchedule.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("CollegeSchedule.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("ExamSubject");

                    b.Navigation("Group");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("CollegeSchedule.Models.PracticeSchedule", b =>
                {
                    b.HasOne("CollegeSchedule.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("CollegeSchedule.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("Group");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("CollegeSchedule.Models.Schedule", b =>
                {
                    b.HasOne("CollegeSchedule.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("CollegeSchedule.Models.Subject", "SubjectDenominator")
                        .WithMany()
                        .HasForeignKey("SubjectDenominatorId");

                    b.HasOne("CollegeSchedule.Models.Subject", "SubjectNumerator")
                        .WithMany()
                        .HasForeignKey("SubjectNumeratorId");

                    b.HasOne("CollegeSchedule.Models.Teacher", "TeacherDenominator")
                        .WithMany()
                        .HasForeignKey("TeacherDenominatorId");

                    b.HasOne("CollegeSchedule.Models.Teacher", "TeacherNumerator")
                        .WithMany()
                        .HasForeignKey("TeacherNumeratorId");

                    b.Navigation("Group");

                    b.Navigation("SubjectDenominator");

                    b.Navigation("SubjectNumerator");

                    b.Navigation("TeacherDenominator");

                    b.Navigation("TeacherNumerator");
                });

            modelBuilder.Entity("CollegeSchedule.Models.TeachersSchedule", b =>
                {
                    b.HasOne("CollegeSchedule.Models.Schedule", "ScheduleDenominator")
                        .WithMany()
                        .HasForeignKey("ScheduleDenominatorId");

                    b.HasOne("CollegeSchedule.Models.Schedule", "ScheduleNumerator")
                        .WithMany()
                        .HasForeignKey("ScheduleNumeratorId");

                    b.HasOne("CollegeSchedule.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("ScheduleDenominator");

                    b.Navigation("ScheduleNumerator");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
